#!/usr/bin/python3

import configparser,os,logging,sys,glob,subprocess
from importlib import machinery
from inspect import signature

INIT_D = "/usr/lib/systemimg/init.d"

def load_inifile(filename):
    parser = configparser.ConfigParser()
    if os.path.isfile(filename):
        with open(filename) as f:
            parser.read_string("[_default]\n" + f.read())
    return parser

def execute_configuration_scripts(ini=None):
    if ini is None: ini = configparser.ConfigParser()
    i = 0
    sys.path.append(INIT_D)
    need_to_reload_systemd = False
    for py in glob.glob(os.path.join(INIT_D, "*.py")):
        try:
            mod = machinery.SourceFileLoader("_confscript%d" % i, py).load_module()
            i += 1
            if not hasattr(mod, "configure"): continue
            #else
            logging.debug("Executing configuration script %s..." % py)
            arglen = len(signature(mod.configure).parameters)
            if arglen == 2:
                if mod.configure("/", ini) == True: need_to_reload_systemd = True
            elif arglen == 1:
                if mod.configure(ini) == True: need_to_reload_systemd = True
        except Exception:
            logging.exception("Exception in %s" % py)
    if need_to_reload_systemd:
        logging.info("Reloading systemd...")
        subprocess.call(["systemctl", "daemon-reload"])

if __name__ == "__main__":
    inifile = load_inifile("/run/initramfs/boot/system.ini")
    debug = inifile.getboolean("_default", "debug", fallback=False)
    logging.basicConfig(level=logging.DEBUG if debug else logging.INFO)
    if debug: logging.info("Debug log enabled.")
    if os.path.isdir(INIT_D):
        logging.info("Configuring system...")
        try:
            execute_configuration_scripts(inifile)
        except Exception:
            logging.exception("Exception occured while configuring system")
